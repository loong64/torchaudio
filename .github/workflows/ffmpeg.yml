# This job is not directly related to regular CI pipeline.
# It is intended to create FFmpeg binaries that we upload on S3,
# which then will be used during all the build process in CI or local.
#
# This job does not include uploading part.
# Upload needs to be done manually, and it should be done only once
# par new major release of FFmepg.
name: FFmpeg Binaries

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 0 * * 0'  # on sunday

jobs:
  LGPL-Linux-loongarch64:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ffmpeg_version: ["4.4.4", "5.0.3", "6.0"]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ffmpeg

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build ffmpeg
        run: |
          rm -f build.sh
          wget -q https://github.com/mthrok/audio/raw/refs/heads/main/.github/scripts/ffmpeg/build.sh
          sudo chmod +x build.sh

          docker run --rm \
            --platform linux/loong64 \
            --volume "$(pwd):/io" \
            --env "FFMPEG_VERSION=${{ matrix.ffmpeg_version }}" \
            --env "FFMPEG_ROOT=/io/ffmpeg" \
            --workdir /io \
            ghcr.io/loong64/manylinuxloongarch64-builder:cpu-loongarch64 \
            sh -c "/io/build.sh"

          sudo tar -cf ${{ matrix.ffmpeg_version }}.tar.gz ffmpeg/include ffmpeg/lib

      - name: Upload FFmpeg Binaries
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-${{ matrix.ffmpeg_version }}
          path: "${{ matrix.ffmpeg_version }}.tar.gz"
          if-no-files-found: error
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs:
      - LGPL-Linux-loongarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ffmpeg
      
      - name: Setup Git
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ffmpeg
          pattern: ffmpeg-*
          merge-multiple: true

      - name: Upload artifacts
        run: |
          artifact_dir="$(date +%Y-%m-%d)"
          mkdir -p "${artifact_dir}"
          mv ffmpeg "${artifact_dir}/linux_loongarch64"
          git add .
          git commit -m "Update FFmpeg binaries $(date +%Y-%m-%d)"
          git push origin ffmpeg